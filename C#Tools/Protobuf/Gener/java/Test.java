// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Test.proto

public final class Test {
  private Test() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface Vector3DOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
    
    // required float z = 3;
    boolean hasZ();
    float getZ();
  }
  public static final class Vector3D extends
      com.google.protobuf.GeneratedMessage
      implements Vector3DOrBuilder {
    // Use Vector3D.newBuilder() to construct.
    private Vector3D(Builder builder) {
      super(builder);
    }
    private Vector3D(boolean noInit) {}
    
    private static final Vector3D defaultInstance;
    public static Vector3D getDefaultInstance() {
      return defaultInstance;
    }
    
    public Vector3D getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private static final Vector3D serializeInstance;
    public static Vector3D getSerializeInstance() {
      return serializeInstance;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Test.internal_static_Vector3D_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Test.internal_static_Vector3D_fieldAccessorTable;
    }
    
    private int bitField0_;
    public boolean hasAnyData() { 
    int val = 0;
    		val= (val| bitField0_);
    
     if(val != 0){
     return true;
    }
    else {
    return false;
    }
     }
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    // required float z = 3;
    public static final int Z_FIELD_NUMBER = 3;
    private float z_;
    public boolean hasZ() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getZ() {
      return z_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
      z_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasZ()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, z_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, z_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Test.Vector3D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Vector3D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Vector3D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Vector3D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Vector3D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Vector3D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Test.Vector3D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Vector3D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Vector3D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Vector3D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Test.Vector3D prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Test.Vector3DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_Vector3D_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_Vector3D_fieldAccessorTable;
      }
      
      // Construct using Test.Vector3D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        z_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Test.Vector3D.getDescriptor();
      }
      
      public Test.Vector3D getDefaultInstanceForType() {
        return Test.Vector3D.getDefaultInstance();
      }
      
      public void serializeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        Test.Vector3D result =  Test.Vector3D.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {throw newUninitializedMessageException(result);  }
        result.writeTo(output);
      }
      public com.google.protobuf.ByteString serializeToByteString() throws java.io.IOException {
        Test.Vector3D result =  Test.Vector3D.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {     throw newUninitializedMessageException(result);  }
        return result.toByteString();
      }
      public Test.Vector3D build() {
        Test.Vector3D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Test.Vector3D buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Test.Vector3D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Test.Vector3D buildPartial() {
        Test.Vector3D result = new Test.Vector3D(this);
        return buildInternal(result);}
      public Test.Vector3D buildInternal(Test.Vector3D result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.z_ = z_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Test.Vector3D) {
          return mergeFrom((Test.Vector3D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Test.Vector3D other) {
        if (other == Test.Vector3D.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasZ()) {
          setZ(other.getZ());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        if (!hasZ()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              z_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      public boolean hasAnyData() { 
      int val = 0;
      		val= (val| bitField0_);
      
       if(val != 0){
       return true;
      }
      else {
      return false;
      }
       }
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // required float z = 3;
      private float z_ ;
      public boolean hasZ() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getZ() {
        return z_;
      }
      public Builder setZ(float value) {
        bitField0_ |= 0x00000004;
        z_ = value;
        onChanged();
        return this;
      }
      public Builder clearZ() {
        bitField0_ = (bitField0_ & ~0x00000004);
        z_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Vector3D)
    }
    
    static {
      defaultInstance = new Vector3D(true);
      defaultInstance.initFields();
      serializeInstance = new Vector3D(true);
      serializeInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Vector3D)
  }
  
  public interface Point2DOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required float x = 1;
    boolean hasX();
    float getX();
    
    // required float y = 2;
    boolean hasY();
    float getY();
  }
  public static final class Point2D extends
      com.google.protobuf.GeneratedMessage
      implements Point2DOrBuilder {
    // Use Point2D.newBuilder() to construct.
    private Point2D(Builder builder) {
      super(builder);
    }
    private Point2D(boolean noInit) {}
    
    private static final Point2D defaultInstance;
    public static Point2D getDefaultInstance() {
      return defaultInstance;
    }
    
    public Point2D getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private static final Point2D serializeInstance;
    public static Point2D getSerializeInstance() {
      return serializeInstance;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Test.internal_static_Point2D_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Test.internal_static_Point2D_fieldAccessorTable;
    }
    
    private int bitField0_;
    public boolean hasAnyData() { 
    int val = 0;
    		val= (val| bitField0_);
    
     if(val != 0){
     return true;
    }
    else {
    return false;
    }
     }
    // required float x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private float x_;
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public float getX() {
      return x_;
    }
    
    // required float y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private float y_;
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getY() {
      return y_;
    }
    
    private void initFields() {
      x_ = 0F;
      y_ = 0F;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasX()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasY()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeFloat(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, y_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Test.Point2D parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Point2D parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Point2D parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Point2D parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Point2D parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Point2D parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Test.Point2D parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Point2D parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Point2D parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Point2D parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Test.Point2D prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Test.Point2DOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_Point2D_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_Point2D_fieldAccessorTable;
      }
      
      // Construct using Test.Point2D.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        x_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Test.Point2D.getDescriptor();
      }
      
      public Test.Point2D getDefaultInstanceForType() {
        return Test.Point2D.getDefaultInstance();
      }
      
      public void serializeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        Test.Point2D result =  Test.Point2D.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {throw newUninitializedMessageException(result);  }
        result.writeTo(output);
      }
      public com.google.protobuf.ByteString serializeToByteString() throws java.io.IOException {
        Test.Point2D result =  Test.Point2D.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {     throw newUninitializedMessageException(result);  }
        return result.toByteString();
      }
      public Test.Point2D build() {
        Test.Point2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Test.Point2D buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Test.Point2D result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Test.Point2D buildPartial() {
        Test.Point2D result = new Test.Point2D(this);
        return buildInternal(result);}
      public Test.Point2D buildInternal(Test.Point2D result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Test.Point2D) {
          return mergeFrom((Test.Point2D)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Test.Point2D other) {
        if (other == Test.Point2D.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasX()) {
          
          return false;
        }
        if (!hasY()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 13: {
              bitField0_ |= 0x00000001;
              x_ = input.readFloat();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              y_ = input.readFloat();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      public boolean hasAnyData() { 
      int val = 0;
      		val= (val| bitField0_);
      
       if(val != 0){
       return true;
      }
      else {
      return false;
      }
       }
      
      // required float x = 1;
      private float x_ ;
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public float getX() {
        return x_;
      }
      public Builder setX(float value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0F;
        onChanged();
        return this;
      }
      
      // required float y = 2;
      private float y_ ;
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getY() {
        return y_;
      }
      public Builder setY(float value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0F;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Point2D)
    }
    
    static {
      defaultInstance = new Point2D(true);
      defaultInstance.initFields();
      serializeInstance = new Point2D(true);
      serializeInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Point2D)
  }
  
  public interface TransformOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required .Vector3D position = 1;
    boolean hasPosition();
    Test.Vector3D getPosition();
    Test.Vector3DOrBuilder getPositionOrBuilder();
    
    // required .Vector3D eulerAngle = 2;
    boolean hasEulerAngle();
    Test.Vector3D getEulerAngle();
    Test.Vector3DOrBuilder getEulerAngleOrBuilder();
    
    // required .Vector3D scale = 3;
    boolean hasScale();
    Test.Vector3D getScale();
    Test.Vector3DOrBuilder getScaleOrBuilder();
  }
  public static final class Transform extends
      com.google.protobuf.GeneratedMessage
      implements TransformOrBuilder {
    // Use Transform.newBuilder() to construct.
    private Transform(Builder builder) {
      super(builder);
    }
    private Transform(boolean noInit) {}
    
    private static final Transform defaultInstance;
    public static Transform getDefaultInstance() {
      return defaultInstance;
    }
    
    public Transform getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    private static final Transform serializeInstance;
    public static Transform getSerializeInstance() {
      return serializeInstance;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Test.internal_static_Transform_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Test.internal_static_Transform_fieldAccessorTable;
    }
    
    private int bitField0_;
    public boolean hasAnyData() { 
    int val = 0;
    		val= (val| bitField0_);
    
     if(val != 0){
     return true;
    }
    else {
    return false;
    }
     }
    // required .Vector3D position = 1;
    public static final int POSITION_FIELD_NUMBER = 1;
    private Test.Vector3D position_;
    public boolean hasPosition() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public Test.Vector3D getPosition() {
      return position_;
    }
    public Test.Vector3DOrBuilder getPositionOrBuilder() {
      return position_;
    }
    
    // required .Vector3D eulerAngle = 2;
    public static final int EULERANGLE_FIELD_NUMBER = 2;
    private Test.Vector3D eulerAngle_;
    public boolean hasEulerAngle() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public Test.Vector3D getEulerAngle() {
      return eulerAngle_;
    }
    public Test.Vector3DOrBuilder getEulerAngleOrBuilder() {
      return eulerAngle_;
    }
    
    // required .Vector3D scale = 3;
    public static final int SCALE_FIELD_NUMBER = 3;
    private Test.Vector3D scale_;
    public boolean hasScale() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public Test.Vector3D getScale() {
      return scale_;
    }
    public Test.Vector3DOrBuilder getScaleOrBuilder() {
      return scale_;
    }
    
    private void initFields() {
      position_ = Test.Vector3D.getDefaultInstance();
      eulerAngle_ = Test.Vector3D.getDefaultInstance();
      scale_ = Test.Vector3D.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasPosition()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEulerAngle()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasScale()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPosition().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getEulerAngle().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getScale().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, eulerAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, scale_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, position_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, eulerAngle_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, scale_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static Test.Transform parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Transform parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Transform parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static Test.Transform parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static Test.Transform parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Transform parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static Test.Transform parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Transform parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static Test.Transform parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static Test.Transform parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(Test.Transform prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements Test.TransformOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Test.internal_static_Transform_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Test.internal_static_Transform_fieldAccessorTable;
      }
      
      // Construct using Test.Transform.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPositionFieldBuilder();
          getEulerAngleFieldBuilder();
          getScaleFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (positionBuilder_ == null) {
          position_ = Test.Vector3D.getDefaultInstance();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (eulerAngleBuilder_ == null) {
          eulerAngle_ = Test.Vector3D.getDefaultInstance();
        } else {
          eulerAngleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (scaleBuilder_ == null) {
          scale_ = Test.Vector3D.getDefaultInstance();
        } else {
          scaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Test.Transform.getDescriptor();
      }
      
      public Test.Transform getDefaultInstanceForType() {
        return Test.Transform.getDefaultInstance();
      }
      
      public void serializeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        Test.Transform result =  Test.Transform.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {throw newUninitializedMessageException(result);  }
        result.writeTo(output);
      }
      public com.google.protobuf.ByteString serializeToByteString() throws java.io.IOException {
        Test.Transform result =  Test.Transform.getSerializeInstance();
        buildInternal(result);
        if (!result.isInitialized()) {     throw newUninitializedMessageException(result);  }
        return result.toByteString();
      }
      public Test.Transform build() {
        Test.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private Test.Transform buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        Test.Transform result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public Test.Transform buildPartial() {
        Test.Transform result = new Test.Transform(this);
        return buildInternal(result);}
      public Test.Transform buildInternal(Test.Transform result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (positionBuilder_ == null) {
          result.position_ = position_;
        } else {
          result.position_ = positionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        if (eulerAngleBuilder_ == null) {
          result.eulerAngle_ = eulerAngle_;
        } else {
          result.eulerAngle_ = eulerAngleBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        if (scaleBuilder_ == null) {
          result.scale_ = scale_;
        } else {
          result.scale_ = scaleBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Test.Transform) {
          return mergeFrom((Test.Transform)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(Test.Transform other) {
        if (other == Test.Transform.getDefaultInstance()) return this;
        if (other.hasPosition()) {
          mergePosition(other.getPosition());
        }
        if (other.hasEulerAngle()) {
          mergeEulerAngle(other.getEulerAngle());
        }
        if (other.hasScale()) {
          mergeScale(other.getScale());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasPosition()) {
          
          return false;
        }
        if (!hasEulerAngle()) {
          
          return false;
        }
        if (!hasScale()) {
          
          return false;
        }
        if (!getPosition().isInitialized()) {
          
          return false;
        }
        if (!getEulerAngle().isInitialized()) {
          
          return false;
        }
        if (!getScale().isInitialized()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              Test.Vector3D.Builder subBuilder = Test.Vector3D.newBuilder();
              if (hasPosition()) {
                subBuilder.mergeFrom(getPosition());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPosition(subBuilder.buildPartial());
              break;
            }
            case 18: {
              Test.Vector3D.Builder subBuilder = Test.Vector3D.newBuilder();
              if (hasEulerAngle()) {
                subBuilder.mergeFrom(getEulerAngle());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEulerAngle(subBuilder.buildPartial());
              break;
            }
            case 26: {
              Test.Vector3D.Builder subBuilder = Test.Vector3D.newBuilder();
              if (hasScale()) {
                subBuilder.mergeFrom(getScale());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setScale(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      public boolean hasAnyData() { 
      int val = 0;
      		val= (val| bitField0_);
      
       if(val != 0){
       return true;
      }
      else {
      return false;
      }
       }
      
      // required .Vector3D position = 1;
      private Test.Vector3D position_ = Test.Vector3D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> positionBuilder_;
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public Test.Vector3D getPosition() {
        if (positionBuilder_ == null) {
          return position_;
        } else {
          return positionBuilder_.getMessage();
        }
      }
      public Builder setPosition(Test.Vector3D value) {
        if (positionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          position_ = value;
          onChanged();
        } else {
          positionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder setPosition(
          Test.Vector3D.Builder builderForValue) {
        if (positionBuilder_ == null) {
          position_ = builderForValue.build();
          onChanged();
        } else {
          positionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder mergePosition(Test.Vector3D value) {
        if (positionBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              position_ != Test.Vector3D.getDefaultInstance()) {
            position_ =
              Test.Vector3D.newBuilder(position_).mergeFrom(value).buildPartial();
          } else {
            position_ = value;
          }
          onChanged();
        } else {
          positionBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      public Builder clearPosition() {
        if (positionBuilder_ == null) {
          position_ = Test.Vector3D.getDefaultInstance();
          onChanged();
        } else {
          positionBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      public Test.Vector3D.Builder getPositionBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPositionFieldBuilder().getBuilder();
      }
      public Test.Vector3DOrBuilder getPositionOrBuilder() {
        if (positionBuilder_ != null) {
          return positionBuilder_.getMessageOrBuilder();
        } else {
          return position_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> 
          getPositionFieldBuilder() {
        if (positionBuilder_ == null) {
          positionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder>(
                  position_,
                  getParentForChildren(),
                  isClean());
          position_ = null;
        }
        return positionBuilder_;
      }
      
      // required .Vector3D eulerAngle = 2;
      private Test.Vector3D eulerAngle_ = Test.Vector3D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> eulerAngleBuilder_;
      public boolean hasEulerAngle() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public Test.Vector3D getEulerAngle() {
        if (eulerAngleBuilder_ == null) {
          return eulerAngle_;
        } else {
          return eulerAngleBuilder_.getMessage();
        }
      }
      public Builder setEulerAngle(Test.Vector3D value) {
        if (eulerAngleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          eulerAngle_ = value;
          onChanged();
        } else {
          eulerAngleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder setEulerAngle(
          Test.Vector3D.Builder builderForValue) {
        if (eulerAngleBuilder_ == null) {
          eulerAngle_ = builderForValue.build();
          onChanged();
        } else {
          eulerAngleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder mergeEulerAngle(Test.Vector3D value) {
        if (eulerAngleBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002) &&
              eulerAngle_ != Test.Vector3D.getDefaultInstance()) {
            eulerAngle_ =
              Test.Vector3D.newBuilder(eulerAngle_).mergeFrom(value).buildPartial();
          } else {
            eulerAngle_ = value;
          }
          onChanged();
        } else {
          eulerAngleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000002;
        return this;
      }
      public Builder clearEulerAngle() {
        if (eulerAngleBuilder_ == null) {
          eulerAngle_ = Test.Vector3D.getDefaultInstance();
          onChanged();
        } else {
          eulerAngleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }
      public Test.Vector3D.Builder getEulerAngleBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getEulerAngleFieldBuilder().getBuilder();
      }
      public Test.Vector3DOrBuilder getEulerAngleOrBuilder() {
        if (eulerAngleBuilder_ != null) {
          return eulerAngleBuilder_.getMessageOrBuilder();
        } else {
          return eulerAngle_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> 
          getEulerAngleFieldBuilder() {
        if (eulerAngleBuilder_ == null) {
          eulerAngleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder>(
                  eulerAngle_,
                  getParentForChildren(),
                  isClean());
          eulerAngle_ = null;
        }
        return eulerAngleBuilder_;
      }
      
      // required .Vector3D scale = 3;
      private Test.Vector3D scale_ = Test.Vector3D.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> scaleBuilder_;
      public boolean hasScale() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public Test.Vector3D getScale() {
        if (scaleBuilder_ == null) {
          return scale_;
        } else {
          return scaleBuilder_.getMessage();
        }
      }
      public Builder setScale(Test.Vector3D value) {
        if (scaleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          scale_ = value;
          onChanged();
        } else {
          scaleBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder setScale(
          Test.Vector3D.Builder builderForValue) {
        if (scaleBuilder_ == null) {
          scale_ = builderForValue.build();
          onChanged();
        } else {
          scaleBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder mergeScale(Test.Vector3D value) {
        if (scaleBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004) &&
              scale_ != Test.Vector3D.getDefaultInstance()) {
            scale_ =
              Test.Vector3D.newBuilder(scale_).mergeFrom(value).buildPartial();
          } else {
            scale_ = value;
          }
          onChanged();
        } else {
          scaleBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000004;
        return this;
      }
      public Builder clearScale() {
        if (scaleBuilder_ == null) {
          scale_ = Test.Vector3D.getDefaultInstance();
          onChanged();
        } else {
          scaleBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      public Test.Vector3D.Builder getScaleBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getScaleFieldBuilder().getBuilder();
      }
      public Test.Vector3DOrBuilder getScaleOrBuilder() {
        if (scaleBuilder_ != null) {
          return scaleBuilder_.getMessageOrBuilder();
        } else {
          return scale_;
        }
      }
      private com.google.protobuf.SingleFieldBuilder<
          Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder> 
          getScaleFieldBuilder() {
        if (scaleBuilder_ == null) {
          scaleBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              Test.Vector3D, Test.Vector3D.Builder, Test.Vector3DOrBuilder>(
                  scale_,
                  getParentForChildren(),
                  isClean());
          scale_ = null;
        }
        return scaleBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:Transform)
    }
    
    static {
      defaultInstance = new Transform(true);
      defaultInstance.initFields();
      serializeInstance = new Transform(true);
      serializeInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Transform)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Vector3D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Vector3D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Point2D_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Point2D_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Transform_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Transform_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\nTest.proto\"+\n\010Vector3D\022\t\n\001x\030\001 \002(\002\022\t\n\001y" +
      "\030\002 \002(\002\022\t\n\001z\030\003 \002(\002\"\037\n\007Point2D\022\t\n\001x\030\001 \002(\002\022" +
      "\t\n\001y\030\002 \002(\002\"a\n\tTransform\022\033\n\010position\030\001 \002(" +
      "\0132\t.Vector3D\022\035\n\neulerAngle\030\002 \002(\0132\t.Vecto" +
      "r3D\022\030\n\005scale\030\003 \002(\0132\t.Vector3D"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_Vector3D_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_Vector3D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Vector3D_descriptor,
              new java.lang.String[] { "X", "Y", "Z", },
              Test.Vector3D.class,
              Test.Vector3D.Builder.class);
          internal_static_Point2D_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_Point2D_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Point2D_descriptor,
              new java.lang.String[] { "X", "Y", },
              Test.Point2D.class,
              Test.Point2D.Builder.class);
          internal_static_Transform_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_Transform_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Transform_descriptor,
              new java.lang.String[] { "Position", "EulerAngle", "Scale", },
              Test.Transform.class,
              Test.Transform.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
